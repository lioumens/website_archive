{
  "hash": "ae68412dd6a3720f7ad0c8025207a27d",
  "result": {
    "markdown": "---\ntitle: \"Social Network Analysis\"\nauthor: \"Michael Liou\"\ndate: \"2022-12-19\"\n---\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-1_2a3ebdbdb69a1cf8429efec84c976fe2'}\n\n```{.r .cell-code  code-summary=\"Libraries\"}\nlibrary(tidyverse)\nlibrary(sna)\nlibrary(asnipe)\nlibrary(ergm) # exponential random graph models\nlibrary(eigenmodel) # latent models by peter hoff\nlibrary(network)\nlibrary(sand) # statistical analysis of network data\nlibrary(RSiena) # Simulation Investigation for Empirical Network Analysis\nlibrary(statnet)\nlibrary(coda)\nlibrary(intergraph)\nlibrary(igraph)\n```\n:::\n\n\n\n# Visualizing Networks\n\n- [ggraph](https://ggraph.data-imaginist.com/) - a nice interface for network data into ggplot\n- [gephi]() - has been around a while\n- [UCINET]() - windows only\n- [Pajek]() - very nice interface\n\n# Sienna\n\n## Introduction\n\nStands for Simulation Investigation for Empirical Network Analysis, named after the city in which the work for this started.\n\nProgram for statistical analysis of network data, with the focus on social networks. There's some interesting context for this\n\nThe basic model fit \n\n## Resources\n- [Informational Website](https://www.stats.ox.ac.uk/~snijders/siena/) - the home website for the SIENNA Project. The website also contains many helpful example scripts and datasets.\n- [Manual for R](https://www.stats.ox.ac.uk/~snijders/siena/RSiena_Manual.pdf#section.8) - This is the place to get started with SIENA modeling, with a longer, practical introduction to using their software.\n- [Duke 2018 Workshop Materials](duke workshop materials/Day 5 - SIENA Models/) - There's some powerpoints with details calculations of how each objective function and evaluation function actually plays out for change in the dyad.\n  - [Links to all the resources and lectures](https://sites.duke.edu/dnac/training/) - the entire workshop materials listed on the website.\n\n## Model Specification\n\nSee Section 5 of [Manual for R](https://www.stats.ox.ac.uk/~snijders/siena/RSiena_Manual.pdf#section.5)\n\nThere are 4 types of functions in the model specification:\n\n1. Rate functions - how often do we get the opportunity to change around the specification?\n2. Evaluation functions - determines the probability of changing their ties. Can be thought of evaluating \"satisfaction\" for each actor's local environment, actors will change to increase their total satisfaction.\n3. Creation function - probability of changes only in the creation of new ties.\n4. Maintenance function - probability of changes only in the maintenance and termination of existing ties.\n\nMost of the time we're only using the first 2, rate and evaluation, with most of the focus on the evaluation function\n\n## Meta Analysis in Rsienna\n\nThe idea is to fit SABM's to each network, and combine the parameter estimates intelligently from all the studies. We could also consider combining the network into one large network and add structural zeros for nodes from different networks, this would also work, but apparently it's very slow running as a large diagonal block matrix in RSienna.\n\n## Examples\n\n### PH819 Lab (single network, two timepoints)\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-2_5ec1e0de50eb0c062948aa7d144ccbe8'}\n\n```{.r .cell-code}\nfriend.data.w1 <- as.matrix(read.table(\"data/class5809.txt\"))\nfriend.data.w2 <- as.matrix(read.table(\"data/class5809_t2.txt\"))\nattr5809<-read.table(\"data/attr5809.txt\",header=TRUE,stringsAsFactors=FALSE)\n\nfor (i in 1:nrow(attr5809)) {if (attr5809[i,50] > 98) {friend.data.w2[i,]=9}}\nfriend.data.w1[friend.data.w1 %in% c(6,9)] <- NA\nfriend.data.w2[friend.data.w2 %in% c(6,9)] <- NA\n\nalcfrq<-cbind(attr5809[,45],attr5809[,48])\nalcfrq[alcfrq %in% c(4,5,6)] <- 4\nalcfrq[alcfrq %in% c(99)] <- NA\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-3_a02a540104272c182d453a64b2f26393'}\n\n```{.r .cell-code}\n# Visualize the networks that we're working with\npar(mfrow = c(1, 2), oma = c(0, 0, 0, 0), mar = c(0, 0, 1, 0))\n\nkcoord <- gplot.layout.fruchtermanreingold(friend.data.w1, layout.par = NULL)\ngplot(friend.data.w1, coord = kcoord, main = \"timepoint 1\", vertex.cex = alcfrq[,1], object.scale = .005)\ngplot(friend.data.w2, coord = kcoord, main = \"timepoint 2\", vertex.cex = alcfrq[,2], object.scale = .005)\n```\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-4_04f59a4efddc36b4dde13923177a27df'}\n\n```{.r .cell-code}\n# create the network (response) and the behavior attributes for each timepoint\nfriendties <- sienaNet(array(c(friend.data.w1, friend.data.w2),\n                             dim=c(nrow(attr5809), nrow(attr5809), 2)))\nalcdrinkbeh <- sienaNet(alcfrq, type=\"behavior\")\n\n# create data covariates\nah_pvt <- coCovar(attr5809[,36]) # denotes constant Covariates\nage <- coCovar(attr5809[,38]) \nmale <- coCovar(attr5809[,40])\nparentdrkfrq <- coCovar(attr5809[,53])\nparentdrkfiv <- coCovar(attr5809[,54])\ntobacco <- coCovar(attr5809[,56])\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-5_9ebaa161cff9c252fce43ad1b698ff23'}\n\n```{.r .cell-code}\n# create the data object for siena\ndata5809 <- sienaDataCreate(friendties,\n                            ah_pvt, age, male, parentdrkfrq,\n                            parentdrkfiv,tobacco,alcdrinkbeh)\neff5809 <- getEffects(data5809)\n\n# prints out a txtfile with more information\nprint01Report(data5809, modelname = 'class5809_init')\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-6_f55b3bed3c46be357ffd83d57e35cbbb'}\n\n```{.r .cell-code}\n# Fit the null model, and display the summary without covariance\n# creates output file \"class5809_run1.txt\"\nmodel5809 <- sienaModelCreate(useStdInits = FALSE, \n                              projname = 'class5809_run1')\nans5809 <- siena07(model5809, data=data5809, effects=eff5809, \n                   batch=FALSE, verbose=FALSE)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-7_b4381cfb637dcee89b8b9f484a2dd774'}\n\n```{.r .cell-code}\nans5809 # display results from fitting\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEstimates, standard errors and convergence t-ratios\n\n                                          Estimate   Standard   Convergence \n                                                       Error      t-ratio   \nNetwork Dynamics \n  1. rate basic rate parameter friendties  8.5126  ( 0.5487   )   -0.0096   \n  2. eval outdegree (density)             -2.7250  ( 0.0444   )   -0.0058   \n  3. eval reciprocity                      2.5915  ( 0.1137   )   -0.0510   \n\nBehavior Dynamics\n  4. rate rate alcdrinkbeh period 1        5.7149  ( 0.9284   )   -0.0260   \n  5. eval alcdrinkbeh linear shape        -0.3687  ( 0.0561   )   -0.0001   \n  6. eval alcdrinkbeh quadratic shape      0.1546  ( 0.0331   )    0.0059   \n\nOverall maximum convergence ratio:    0.0788 \n\n\nTotal of 2669 iteration steps.\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-8_10c3dc5edd348bb9f096425a2c7a7dc7'}\n\n```{.r .cell-code}\n# Wald-style p-values can be calculated by\n\n1 - pnorm(abs(ans5809$theta / ans5809$se))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.000000e+00 0.000000e+00 0.000000e+00 3.738017e-10 2.470590e-11\n[6] 1.457415e-06\n```\n:::\n:::\n\n\n### PH819 Lab Meta analysis (4 networks, 2 timepoints each)\n\nThere's a massive amount of code for this, and we need to run SABM for all 4 models before we can actually do a meta analysis\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-9_3ca33547e7bea676d5a32c6859228654'}\n\n```{.r .cell-code}\n# Network 1: class 7\nfriend.data.w1 <- as.matrix(read.table(\"data/class7.txt\"))\nfriend.data.w2 <- as.matrix(read.table(\"data/class7_t2.txt\"))\nattr7<-read.table(\"data/attr7.txt\",header=TRUE,stringsAsFactors=FALSE)\nfor (i in 1:nrow(attr7)) {if (attr7[i,48] > 98) {friend.data.w2[i,]=9}}\nfriend.data.w1[friend.data.w1 %in% c(6,9)] <- NA\nfriend.data.w2[friend.data.w2 %in% c(6,9)] <- NA\nalcdrinkbeh<-cbind(attr7[,45],attr7[,48])\nalcdrinkbeh[alcdrinkbeh %in% c(99)] <- NA\nfriendties <- sienaNet(array(c(friend.data.w1,friend.data.w2),dim=c(nrow(attr7),nrow(attr7),2)))\nalcdrinkbeh <- sienaNet(alcdrinkbeh,type=\"behavior\")\nah_pvt <- coCovar(attr7[,36])\nage <- coCovar(attr7[,38])\nmale <- coCovar(attr7[,40])\nparentdrkfrq <- coCovar(attr7[,53])\ntobacco <- coCovar(attr7[,56])\ndataset.7 <- sienaDataCreate(friendties,ah_pvt,age,male,parentdrkfrq,tobacco,alcdrinkbeh)\neffects.7 <- getEffects(dataset.7)\neffectsDocumentation(effects.7)\n\neffects.7 <- includeEffects(effects.7,transTrip,type=\"eval\")\neffects.7 <- includeEffects(effects.7,cycle3,type=\"eval\")\neffects.7 <- includeEffects(effects.7,simX,type=\"eval\",interaction1=\"age\") #age similarity\neffects.7 <- includeEffects(effects.7,sameX,type=\"eval\",interaction1=\"male\") #same gender\neffects.7 <- includeEffects(effects.7,simX,type=\"eval\",interaction1=\"ah_pvt\") #similar scholastic aptitude\neffects.7 <- includeEffects(effects.7,simX,type=\"eval\",interaction1=\"alcdrinkbeh\") #similar alcoholic use\neffects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",maxAlt,interaction1=\"friendties\") #average exposure\n# effects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",avRecAlt,interaction1=\"friendties\") #average exposure\neffects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"age\") #age effect\neffects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"parentdrkfrq\") #parent drinking effect\neffects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"tobacco\") #tobacco effect\neffects.7 <- includeEffects(effects.7,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"ah_pvt\") #ah_pvt effect\n\nmodelall <- sienaModelCreate(useStdInits = FALSE, projname = 'AlcoholBehavior')\n\nans.7 <- siena07(modelall, data=dataset.7, effects=effects.7, batch=FALSE)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-10_5ae92a1934ca654bbc2d62d22b7f9c69'}\n\n```{.r .cell-code}\n# Network 2: class 5809\nfriend.data.w1 <- as.matrix(read.table(\"data/class5809.txt\"))\nfriend.data.w2 <- as.matrix(read.table(\"data/class5809_t2.txt\"))\nattr5809<-read.table(\"data/attr5809.txt\",header=TRUE,stringsAsFactors=FALSE)\nfor (i in 1:nrow(attr5809)) {if (attr5809[i,48] > 98) {friend.data.w2[i,]=9}}\nfriend.data.w1[friend.data.w1 %in% c(6,9)] <- NA\nfriend.data.w2[friend.data.w2 %in% c(6,9)] <- NA\nalcdrinkbeh<-cbind(attr5809[,45],attr5809[,48])\nalcdrinkbeh[alcdrinkbeh %in% c(99)] <- NA\nfriendties <- sienaNet(array(c(friend.data.w1,friend.data.w2),dim=c(nrow(attr5809),nrow(attr5809),2)))\nalcdrinkbeh <- sienaNet(alcdrinkbeh,type=\"behavior\")\nah_pvt <- coCovar(attr5809[,36])\n\nage <- coCovar(attr5809[,38])\nmale <- coCovar(attr5809[,40])\nparentdrkfrq <- coCovar(attr5809[,53])\ntobacco <- coCovar(attr5809[,56])\ndataset.5809 <- sienaDataCreate(friendties,ah_pvt,age,male,parentdrkfrq,tobacco,alcdrinkbeh)\neffects.5809 <- getEffects(dataset.5809)\n\neffects.5809 <- includeEffects(effects.5809,transTrip,type=\"eval\")\neffects.5809 <- includeEffects(effects.5809,cycle3,type=\"eval\")\neffects.5809 <- includeEffects(effects.5809,simX,type=\"eval\",interaction1=\"age\") #age similarity\neffects.5809 <- includeEffects(effects.5809,sameX,type=\"eval\",interaction1=\"male\") #same gender\neffects.5809 <- includeEffects(effects.5809,simX,type=\"eval\",interaction1=\"ah_pvt\") #similar scholastic aptitude\neffects.5809 <- includeEffects(effects.5809,simX,type=\"eval\",interaction1=\"alcdrinkbeh\") #similar alcoholic use\neffects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",maxAlt,interaction1=\"friendties\") #average exposure\n# effects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",avRecAlt,interaction1=\"friendties\") #average exposure\neffects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"age\") #age effect\neffects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"parentdrkfrq\") #parent drinking effect\neffects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"tobacco\") #tobacco effect\neffects.5809 <- includeEffects(effects.5809,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"ah_pvt\") #ah_pvt effect\n\nmodelall <- sienaModelCreate(useStdInits = FALSE, projname = 'AlcoholBehavior')\n\nans.5809 <- siena07(modelall, data=dataset.5809, effects=effects.5809, batch=FALSE)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-11_790d7abd8adabfccd0db535d8b3ff258'}\n\n```{.r .cell-code}\n# Network 3: class 8\nfriend.data.w1 <- as.matrix(read.table(\"data/class8.txt\"))\nfriend.data.w2 <- as.matrix(read.table(\"data/class8_t2.txt\"))\nattr8<-read.table(\"data/attr8.txt\",header=TRUE,stringsAsFactors=FALSE)\nfor (i in 1:nrow(attr8)) {if (attr8[i,48] > 98) {friend.data.w2[i,]=9}}\nfriend.data.w1[friend.data.w1 %in% c(6,9)] <- NA\nfriend.data.w2[friend.data.w2 %in% c(6,9)] <- NA\n\nalcdrinkbeh<-cbind(attr8[,45],attr8[,48])\nalcdrinkbeh[alcdrinkbeh %in% c(99)] <- NA\nfriendties <- sienaNet(array(c(friend.data.w1,friend.data.w2),dim=c(nrow(attr8),nrow(attr8),2)))\nalcdrinkbeh <- sienaNet(alcdrinkbeh,type=\"behavior\")\nah_pvt <- coCovar(attr8[,36])\nage <- coCovar(attr8[,38])\nmale <- coCovar(attr8[,40])\nparentdrkfrq <- coCovar(attr8[,53])\ntobacco <- coCovar(attr8[,56])\ndataset.8 <- sienaDataCreate(friendties,ah_pvt,age,male,parentdrkfrq,tobacco,alcdrinkbeh)\neffects.8 <- getEffects(dataset.8)\neffects.8 <- includeEffects(effects.8,transTrip,type=\"eval\")\neffects.8 <- includeEffects(effects.8,cycle3,type=\"eval\")\neffects.8 <- includeEffects(effects.8,simX,type=\"eval\",interaction1=\"age\") #age similarity\neffects.8 <- includeEffects(effects.8,sameX,type=\"eval\",interaction1=\"male\") #same gender\neffects.8 <- includeEffects(effects.8,simX,type=\"eval\",interaction1=\"ah_pvt\") #similar scholastic aptitude\neffects.8 <- includeEffects(effects.8,simX,type=\"eval\",interaction1=\"alcdrinkbeh\") #similar alcoholic use\neffects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",maxAlt,interaction1=\"friendties\") #average exposure\n# effects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",avRecAlt,interaction1=\"friendties\") #average exposure\neffects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"age\") #age effect\neffects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"parentdrkfrq\") #parent drinking effect\neffects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"tobacco\") #tobacco effect\neffects.8 <- includeEffects(effects.8,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"ah_pvt\") #ah_pvt effect\n\nmodelall <- sienaModelCreate(useStdInits = FALSE, projname = 'AlcoholBehavior')\n\nans.8 <- siena07(modelall, data=dataset.8, effects=effects.8, batch=FALSE)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-12_4b662dec6cfbe00018ae60117ae58797'}\n\n```{.r .cell-code}\n# Network 4: class 88\nfriend.data.w1 <- as.matrix(read.table(\"data/class88.txt\"))\nfriend.data.w2 <- as.matrix(read.table(\"data/class88_t2.txt\"))\nattr88<-read.table(\"data/attr88.txt\",header=TRUE,stringsAsFactors=FALSE)\nfor (i in 1:nrow(attr88)) {if (attr88[i,48] > 98) {friend.data.w2[i,]=9}}\nfriend.data.w1[friend.data.w1 %in% c(6,9)] <- NA\nfriend.data.w2[friend.data.w2 %in% c(6,9)] <- NA\nalcdrinkbeh<-cbind(attr88[,45],attr88[,48])\nalcdrinkbeh[alcdrinkbeh %in% c(99)] <- NA\nfriendties <- sienaNet(array(c(friend.data.w1,friend.data.w2),dim=c(nrow(attr88),nrow(attr88),2)))\nalcdrinkbeh <- sienaNet(alcdrinkbeh,type=\"behavior\")\nah_pvt <- coCovar(attr88[,36])\nage <- coCovar(attr88[,38])\nmale <- coCovar(attr88[,40])\nparentdrkfrq <- coCovar(attr88[,53])\ntobacco <- coCovar(attr88[,56])\ndataset.88 <- sienaDataCreate(friendties,ah_pvt,age,male,parentdrkfrq,tobacco,alcdrinkbeh)\neffects.88 <- getEffects(dataset.88)\n\neffects.88 <- includeEffects(effects.88,transTrip,type=\"eval\")\neffects.88 <- includeEffects(effects.88,cycle3,type=\"eval\")\neffects.88 <- includeEffects(effects.88,simX,type=\"eval\",interaction1=\"age\") #age similarity\neffects.88 <- includeEffects(effects.88,sameX,type=\"eval\",interaction1=\"male\") #same gender\neffects.88 <- includeEffects(effects.88,simX,type=\"eval\",interaction1=\"ah_pvt\") #similar scholastic aptitude\neffects.88 <- includeEffects(effects.88,simX,type=\"eval\",interaction1=\"alcdrinkbeh\") #similar alcoholic use\neffects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",maxAlt,interaction1=\"friendties\") #average exposure\n# effects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",avRecAlt,interaction1=\"friendties\") #average exposure\neffects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"age\") #age effect\neffects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"parentdrkfrq\") #parent drinking effect\neffects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"tobacco\") #tobacco effect\neffects.88 <- includeEffects(effects.88,name=\"alcdrinkbeh\",effFrom,type=\"eval\",interaction1=\"ah_pvt\") #ah_pvt effect\n\nmodelall <- sienaModelCreate(useStdInits = FALSE, projname = 'AlcoholBehavior')\n\nans.88 <- siena07(modelall, data=dataset.88, effects=effects.88, batch=FALSE)\n```\n:::\n\n\nthe actual meta analysis is done by the function `siena08()`, based on Siena fits.\n\n- Must have the same covariates fit in the networks. The output of the file is pretty self explanatory.\n- There's an automatic warning/filtering if the standard error of any of the variable estimates is >5 because this is a sign of instability, and need to model the networks again.\n- If you have fit warning, the advice is to check the output simulations and goodness-of-fit parameters to make sure we have a good fit\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-13_239e5cca5aa31ecf7a2d8ab65d25fb99'}\n\n```{.r .cell-code}\nmeta <- siena08(ans.5809, ans.88, ans.7, ans.8)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in iwlsm.default(x, y, weights, method = method, wt.method =\nwt.method, : iwlsm failed to converge in 20 steps\n```\n:::\n\n```{.r .cell-code}\nsummary(meta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```{style=\"max-height:600px;\"}\n================================= SIENA08 ================================================\nMultilevel use of Siena algorithms according to Snijders & Baerveldt (2003) with extension\n==========================================================================================\n\nNumber of projects in the list is 4.\nThe names of these projects are :\nproject1: <AlcoholBehavior(ans.5809)>\nproject2: <AlcoholBehavior(ans.88)>\nproject3: <AlcoholBehavior(ans.7)>\nproject4: <AlcoholBehavior(ans.8)>\n\nOptions for running Siena08:\n-> Parameters are excluded from the meta-analysis when their standard\n   error exceeds an upper bound of 5.\n-> Extra output requested\n\nThe RSiena Version of the first fit object is 1.3.14.\n\nObject <AlcoholBehavior(ans.5809)> contains estimates of 17 parameters.\nThe number of valid score tests found was 17.\nObject <AlcoholBehavior(ans.7)> contains estimates of 17 parameters.\nThe number of valid score tests found was 17.\nObject <AlcoholBehavior(ans.8)> contains estimates of 17 parameters.\nThe number of valid score tests found was 17.\nObject <AlcoholBehavior(ans.88)> contains estimates of 17 parameters.\nThe number of valid score tests found was 17.\n\nA total of 17 parameters in 4 projects :\n 1. rate : basic rate parameter friendties\n 2. eval : outdegree (density)\n 3. eval : reciprocity\n 4. eval : transitive triplets\n 5. eval : 3-cycles\n 6. eval : ah_pvt similarity\n 7. eval : age similarity\n 8. eval : same male\n 9. eval : alcdrinkbeh similarity\n10. rate : rate alcdrinkbeh period 1\n11. eval : alcdrinkbeh linear shape\n12. eval : alcdrinkbeh quadratic shape\n13. eval : alcdrinkbeh max. alter\n14. eval : alcdrinkbeh: effect from ah_pvt\n15. eval : alcdrinkbeh: effect from age\n16. eval : alcdrinkbeh: effect from parentdrkfrq\n17. eval : alcdrinkbeh: effect from tobacco\n\nThe projects contain the parameters as follows (1=present, 0=absent):\n\nProject  |    1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17\n---------+-----------------------------------------------------\n   1     |    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n   2     |    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n   3     |    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n   4     |    1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n\nProject AlcoholBehavior(ans.5809) \npar. 1 estimate       9.8292 (s.e.       0.5833 ) (conv_t   -0.0144 )\n par. 2 estimate      -3.1471 (s.e.       0.0839 ) (conv_t    0.0098 )\n par. 3 estimate       2.3902 (s.e.       0.1302 ) (conv_t    0.0045 )\n par. 4 estimate       0.6644 (s.e.       0.0612 ) (conv_t    0.0027 )\n par. 5 estimate      -0.4685 (s.e.       0.1267 ) (conv_t    0.0183 )\n par. 6 estimate       0.6474 (s.e.       0.2360 ) (conv_t   -0.0576 )\n par. 7 estimate      -0.0497 (s.e.       0.1852 ) (conv_t    0.0193 )\n par. 8 estimate       0.2841 (s.e.       0.0721 ) (conv_t    0.0165 )\n par. 9 estimate       1.6232 (s.e.       0.7060 ) (conv_t    0.0291 )\n par. 10 estimate       6.2508 (s.e.       1.0278 ) (conv_t   -0.0418 )\npar. 11 estimate      -0.3628 (s.e.       0.0930 ) (conv_t    0.0965 )\npar. 12 estimate       0.0045 (s.e.       0.0223 ) (conv_t   -0.0025 )\npar. 13 estimate       0.0133 (s.e.       0.0740 ) (conv_t    0.0252 )\npar. 14 estimate      -0.0026 (s.e.       0.0051 ) (conv_t    0.1028 )\npar. 15 estimate      -0.0362 (s.e.       0.1053 ) (conv_t   -0.0091 )\npar. 16 estimate       0.0130 (s.e.       0.0421 ) (conv_t   -0.0356 )\npar. 17 estimate       0.4565 (s.e.       0.1662 ) (conv_t   -0.0228 )\n\nMaximal absolute convergence t-statistic =     0.1028 \n\nProject AlcoholBehavior(ans.7) \npar. 1 estimate       8.0083 (s.e.       0.6869 ) (conv_t    0.0567 )\n par. 2 estimate      -2.9324 (s.e.       0.1028 ) (conv_t    0.0195 )\n par. 3 estimate       2.4027 (s.e.       0.1719 ) (conv_t    0.0725 )\n par. 4 estimate       0.7559 (s.e.       0.0878 ) (conv_t   -0.0255 )\n par. 5 estimate      -0.7416 (s.e.       0.1987 ) (conv_t   -0.0204 )\n par. 6 estimate       0.9396 (s.e.       0.3295 ) (conv_t   -0.0089 )\n par. 7 estimate       1.2576 (s.e.       0.2569 ) (conv_t    0.0308 )\n par. 8 estimate       0.3966 (s.e.       0.1017 ) (conv_t    0.0038 )\n par. 9 estimate       0.4264 (s.e.       0.3829 ) (conv_t   -0.0051 )\n par. 10 estimate       5.1388 (s.e.       1.2683 ) (conv_t    0.0269 )\npar. 11 estimate      -0.3858 (s.e.       0.1158 ) (conv_t    0.0550 )\npar. 12 estimate       0.0332 (s.e.       0.0346 ) (conv_t    0.0540 )\npar. 13 estimate      -0.1452 (s.e.       0.1205 ) (conv_t    0.0258 )\npar. 14 estimate       0.0097 (s.e.       0.0088 ) (conv_t   -0.0302 )\npar. 15 estimate      -0.0004 (s.e.       0.0549 ) (conv_t    0.0142 )\npar. 16 estimate       0.1426 (s.e.       0.0994 ) (conv_t    0.0132 )\npar. 17 estimate       0.3567 (s.e.       0.2080 ) (conv_t    0.0045 )\n\nMaximal absolute convergence t-statistic =     0.0725 \n\nProject AlcoholBehavior(ans.8) \npar. 1 estimate       6.5754 (s.e.       0.6509 ) (conv_t    0.0354 )\n par. 2 estimate      -2.4235 (s.e.       0.1275 ) (conv_t    0.0368 )\n par. 3 estimate       1.6312 (s.e.       0.2647 ) (conv_t   -0.0154 )\n par. 4 estimate       0.6344 (s.e.       0.0816 ) (conv_t   -0.0014 )\n par. 5 estimate      -0.4651 (s.e.       0.1770 ) (conv_t   -0.0199 )\n par. 6 estimate       0.7482 (s.e.       0.3947 ) (conv_t    0.0306 )\n par. 7 estimate       1.3274 (s.e.       0.3425 ) (conv_t    0.0113 )\n par. 8 estimate       0.2883 (s.e.       0.1199 ) (conv_t   -0.0067 )\n par. 9 estimate       0.8932 (s.e.       0.5473 ) (conv_t   -0.0251 )\n par. 10 estimate       4.7190 (s.e.       1.9662 ) (conv_t   -0.0388 )\npar. 11 estimate      -0.6328 (s.e.       0.2101 ) (conv_t   -0.0179 )\npar. 12 estimate       0.0507 (s.e.       0.0520 ) (conv_t   -0.0806 )\npar. 13 estimate       0.0674 (s.e.       0.1825 ) (conv_t   -0.0648 )\npar. 14 estimate       0.0198 (s.e.       0.0141 ) (conv_t   -0.0684 )\npar. 15 estimate       0.0759 (s.e.       0.0701 ) (conv_t   -0.0364 )\npar. 16 estimate       0.0674 (s.e.       0.1173 ) (conv_t    0.0413 )\npar. 17 estimate       0.0612 (s.e.       0.2558 ) (conv_t   -0.0055 )\n\nMaximal absolute convergence t-statistic =     0.0806 \n\nProject AlcoholBehavior(ans.88) \npar. 1 estimate       8.5888 (s.e.       0.9511 ) (conv_t    0.0581 )\n par. 2 estimate      -2.6220 (s.e.       0.1316 ) (conv_t    0.0660 )\n par. 3 estimate       1.6849 (s.e.       0.2560 ) (conv_t    0.0602 )\n par. 4 estimate       0.4889 (s.e.       0.0696 ) (conv_t    0.0932 )\n par. 5 estimate      -0.3216 (s.e.       0.1768 ) (conv_t    0.0907 )\n par. 6 estimate       0.9429 (s.e.       0.3701 ) (conv_t    0.0450 )\n par. 7 estimate       1.7286 (s.e.       0.4198 ) (conv_t    0.0564 )\n par. 8 estimate       0.0924 (s.e.       0.1292 ) (conv_t    0.0600 )\n par. 9 estimate       0.6717 (s.e.       0.5422 ) (conv_t    0.0553 )\n par. 10 estimate       1.8970 (s.e.       0.7808 ) (conv_t    0.0573 )\npar. 11 estimate      -1.1139 (s.e.       0.4904 ) (conv_t    0.0281 )\npar. 12 estimate       0.5294 (s.e.       0.5378 ) (conv_t    0.0504 )\npar. 13 estimate       0.3070 (s.e.       0.4469 ) (conv_t    0.0356 )\npar. 14 estimate      -0.0385 (s.e.       0.0324 ) (conv_t   -0.0657 )\npar. 15 estimate       0.0798 (s.e.       0.1718 ) (conv_t   -0.0079 )\npar. 16 estimate      -0.1119 (s.e.       0.3499 ) (conv_t    0.0128 )\npar. 17 estimate      -0.0197 (s.e.       0.7183 ) (conv_t    0.0150 )\n\nMaximal absolute convergence t-statistic =     0.0932 \n\n\n=============================\nResults of the meta-analysis:\n=============================\n\nUpper bound used for standard error is     5.00.\n\n--------------------------------------------------------------------------------\nParameter 1: rate : basic rate parameter friendties\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       9.8292 (standard error        0.58)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       8.5888 (standard error        0.95)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       8.0083 (standard error        0.69)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       6.5754 (standard error        0.65)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.2, two-sided p = 0.917\n\nTest that all parameters are 0 : \nchi-squared = 603.4541, d.f. = 4, p < 0.001\n\nEstimated mean parameter   8.2532 (s.e.   0.6983), two-sided p = 0.001\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    1.3965\nTest that variance of parameter is 0 :\nChi-squared =   14.1632 (d.f. = 3), p = 0.003\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   8.2551 (s.e.   0.6316), two-sided p < 0.001\n0.95 level confidence interval [  6.6765 ,  9.8245 ]\nEstimated standard deviation    1.0425 \n0.95 level confidence interval [   0.293 ,   2.926 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =  630.4575 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =         0 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 2: eval : outdegree (density)\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -3.1471 (standard error        0.08)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -2.6220 (standard error        0.13)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate      -2.9324 (standard error        0.10)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate      -2.4235 (standard error        0.13)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.8, two-sided p = 0.333\n\nTest that all parameters are 0 : \nchi-squared = 2979.318, d.f. = 4, p < 0.001\n\nEstimated mean parameter  -2.7919 (s.e.   0.1614), two-sided p < 0.001\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.3227\nTest that variance of parameter is 0 :\nChi-squared =   27.0656 (d.f. = 3), p < 0.001\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter  -2.7954 (s.e.   0.1405), two-sided p < 0.001\n0.95 level confidence interval [ -3.1427 , -2.4306 ]\nEstimated standard deviation    0.2577 \n0.95 level confidence interval [  0.1166 ,  0.6775 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =         0 (d.f. = 8), p = 1.000\nCombination of left one-sided p-values:\nChi-squared =  3012.509 (d.f. = 8), p < 0.001\n\n--------------------------------------------------------------------------------\nParameter 3: eval : reciprocity\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       2.3902 (standard error        0.13)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       1.6849 (standard error        0.26)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       2.4027 (standard error        0.17)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       1.6312 (standard error        0.26)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.8, two-sided p = 0.333\n\nTest that all parameters are 0 : \nchi-squared = 613.8601, d.f. = 4, p < 0.001\n\nEstimated mean parameter   2.0724 (s.e.   0.2122), two-sided p = 0.002\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.4244\nTest that variance of parameter is 0 :\nChi-squared =   12.1538 (d.f. = 3), p = 0.007\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   2.0898 (s.e.   0.1793), two-sided p = 0.001\n0.95 level confidence interval [  1.5865 ,  2.5149 ]\nEstimated standard deviation     0.295 \n0.95 level confidence interval [       0 ,  0.8727 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =  639.8221 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =         0 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 4: eval : transitive triplets\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.6644 (standard error        0.06)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.4889 (standard error        0.07)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.7559 (standard error        0.09)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.6344 (standard error        0.08)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared = 301.7613, d.f. = 4, p < 0.001\n\nEstimated mean parameter   0.6304 (s.e.   0.0549), two-sided p = 0.001\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.1098\nTest that variance of parameter is 0 :\nChi-squared =    6.4731 (d.f. = 3), p = 0.091\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.6288 (s.e.   0.0467), two-sided p < 0.001\n0.95 level confidence interval [  0.5127 ,   0.753 ]\nEstimated standard deviation    0.0571 \n0.95 level confidence interval [       0 ,    0.22 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   326.301 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =         0 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 5: eval : 3-cycles\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -0.4685 (standard error        0.13)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -0.3216 (standard error        0.18)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate      -0.7416 (standard error        0.20)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate      -0.4651 (standard error        0.18)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared =  37.8092, d.f. = 4, p < 0.001\n\nEstimated mean parameter  -0.4824 (s.e.   0.0768), two-sided p = 0.008\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.1536\nTest that variance of parameter is 0 :\nChi-squared =    2.5521 (d.f. = 3), p = 0.466\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter  -0.4824 (s.e.   0.0812), two-sided p = 0.010\n0.95 level confidence interval [ -0.6633 , -0.3136 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.2927 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =    0.0792 (d.f. = 8), p = 1.000\nCombination of left one-sided p-values:\nChi-squared =   54.4054 (d.f. = 8), p < 0.001\n\n--------------------------------------------------------------------------------\nParameter 6: eval : ah_pvt similarity\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.6474 (standard error        0.24)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.9429 (standard error        0.37)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.9396 (standard error        0.33)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.7482 (standard error        0.39)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared =  25.7413, d.f. = 4, p < 0.001\n\nEstimated mean parameter   0.7818 (s.e.    0.081), two-sided p = 0.002\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error     0.162\nTest that variance of parameter is 0 :\nChi-squared =    0.7508 (d.f. = 3), p = 0.861\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.7818 (s.e.   0.1564), two-sided p = 0.015\n0.95 level confidence interval [  0.4751 ,  1.1097 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.4542 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   41.3675 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =    0.0802 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 7: eval : age similarity\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -0.0497 (standard error        0.19)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       1.7286 (standard error        0.42)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       1.2576 (standard error        0.26)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       1.3274 (standard error        0.34)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =        1, two-sided p = 0.083\n\nTest that all parameters are 0 : \nchi-squared =  56.0198, d.f. = 4, p < 0.001\n\nEstimated mean parameter   1.0169 (s.e.   0.3941), two-sided p = 0.082\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.7882\nTest that variance of parameter is 0 :\nChi-squared =   30.3829 (d.f. = 3), p < 0.001\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   1.0043 (s.e.   0.3517), two-sided p = 0.065\n0.95 level confidence interval [  0.1597 ,  1.9231 ]\nEstimated standard deviation    0.6341 \n0.95 level confidence interval [  0.2956 ,  1.6637 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =    71.477 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =    1.8621 (d.f. = 8), p = 0.985\n\n--------------------------------------------------------------------------------\nParameter 8: eval : same male\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.2841 (standard error        0.07)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.0924 (standard error        0.13)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.3966 (standard error        0.10)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.2883 (standard error        0.12)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared =  36.9989, d.f. = 4, p < 0.001\n\nEstimated mean parameter   0.2808 (s.e.   0.0565), two-sided p = 0.016\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.1131\nTest that variance of parameter is 0 :\nChi-squared =    3.4271 (d.f. = 3), p = 0.330\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.2833 (s.e.   0.0489), two-sided p = 0.010\n0.95 level confidence interval [  0.1603 ,  0.3909 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.2035 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   52.5821 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =    0.5578 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 9: eval : alcdrinkbeh similarity\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       1.6232 (standard error        0.71)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.6717 (standard error        0.54)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.4264 (standard error        0.38)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.8932 (standard error        0.55)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =        1, two-sided p = 0.083\n\nTest that all parameters are 0 : \nchi-squared =  10.7244, d.f. = 4, p = 0.013\n\nEstimated mean parameter   0.7344 (s.e.   0.2316), two-sided p = 0.050\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.4631\nTest that variance of parameter is 0 :\nChi-squared =    2.3295 (d.f. = 3), p = 0.507\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.7344 (s.e.   0.2535), two-sided p = 0.063\n0.95 level confidence interval [  0.2367 ,  1.3593 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.9042 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   23.5003 (d.f. = 8), p = 0.003\nCombination of left one-sided p-values:\nChi-squared =    0.6398 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 10: rate : rate alcdrinkbeh period 1\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       6.2508 (standard error        1.03)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       1.8970 (standard error        0.78)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       5.1388 (standard error        1.27)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       4.7190 (standard error        1.97)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.2, two-sided p = 0.917\n\nTest that all parameters are 0 : \nchi-squared =  65.0635, d.f. = 4, p < 0.001\n\nEstimated mean parameter   4.3543 (s.e.   1.0244), two-sided p = 0.024\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    2.0488\nTest that variance of parameter is 0 :\nChi-squared =   12.9376 (d.f. = 3), p = 0.005\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   4.3377 (s.e.   0.9766), two-sided p = 0.021\n0.95 level confidence interval [  2.0426 ,  6.8312 ]\nEstimated standard deviation    1.5289 \n0.95 level confidence interval [  0.4061 ,  4.3436 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   83.0214 (d.f. = 8), p < 0.001\nCombination of left one-sided p-values:\nChi-squared =    0.0317 (d.f. = 8), p = 1.000\n\n--------------------------------------------------------------------------------\nParameter 11: eval : alcdrinkbeh linear shape\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -0.3628 (standard error        0.09)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -1.1139 (standard error        0.49)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate      -0.3858 (standard error        0.12)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate      -0.6328 (standard error        0.21)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =       -1, two-sided p = 0.083\n\nTest that all parameters are 0 : \nchi-squared =  40.5536, d.f. = 4, p < 0.001\n\nEstimated mean parameter  -0.4526 (s.e.   0.1063), two-sided p = 0.024\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.2125\nTest that variance of parameter is 0 :\nChi-squared =    3.4839 (d.f. = 3), p = 0.323\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter  -0.4132 (s.e.   0.0679), two-sided p = 0.009\n0.95 level confidence interval [ -0.6298 , -0.2801 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.2877 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =    0.0268 (d.f. = 8), p = 1.000\nCombination of left one-sided p-values:\nChi-squared =    57.608 (d.f. = 8), p < 0.001\n\n--------------------------------------------------------------------------------\nParameter 12: eval : alcdrinkbeh quadratic shape\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.0045 (standard error        0.02)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.5294 (standard error        0.54)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.0332 (standard error        0.03)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0507 (standard error        0.05)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =        1, two-sided p = 0.083\n\nTest that all parameters are 0 : \nchi-squared =   2.8786, d.f. = 4, p = 0.411\n\nEstimated mean parameter   0.0178 (s.e.   0.0165), two-sided p = 0.360\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error     0.033\nTest that variance of parameter is 0 :\nChi-squared =    1.8578 (d.f. = 3), p = 0.602\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.0178 (s.e.   0.0176), two-sided p = 0.387\n0.95 level confidence interval [ -0.0175 ,  0.0656 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,   0.064 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   12.5311 (d.f. = 8), p = 0.129\nCombination of left one-sided p-values:\nChi-squared =    2.1752 (d.f. = 8), p = 0.975\n\n--------------------------------------------------------------------------------\nParameter 13: eval : alcdrinkbeh max. alter\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.0133 (standard error        0.07)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.3070 (standard error        0.45)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate      -0.1452 (standard error        0.12)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0674 (standard error        0.18)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.8, two-sided p = 0.333\n\nTest that all parameters are 0 : \nchi-squared =   2.0926, d.f. = 4, p = 0.553\n\nEstimated mean parameter   -0.014 (s.e.   0.0582), two-sided p = 0.826\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.1164\nTest that variance of parameter is 0 :\nChi-squared =    2.0368 (d.f. = 3), p = 0.565\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   -0.014 (s.e.   0.0591), two-sided p = 0.828\n0.95 level confidence interval [ -0.1557 ,  0.1289 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.2326 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =    6.8084 (d.f. = 8), p = 0.557\nCombination of left one-sided p-values:\nChi-squared =    6.9042 (d.f. = 8), p = 0.547\n\n--------------------------------------------------------------------------------\nParameter 14: eval : alcdrinkbeh: effect from ah_pvt\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -0.0026 (standard error        0.01)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -0.0385 (standard error        0.03)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.0097 (standard error        0.01)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0198 (standard error        0.01)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.2, two-sided p = 0.917\n\nTest that all parameters are 0 : \nchi-squared =   4.8712, d.f. = 4, p = 0.181\n\nEstimated mean parameter   0.0038 (s.e.   0.0082), two-sided p = 0.675\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.0165\nTest that variance of parameter is 0 :\nChi-squared =    4.7381 (d.f. = 3), p = 0.192\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.0015 (s.e.   0.0042), two-sided p = 0.738\n0.95 level confidence interval [ -0.0092 ,  0.0167 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.0238 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   10.0287 (d.f. = 8), p = 0.263\nCombination of left one-sided p-values:\nChi-squared =    7.1317 (d.f. = 8), p = 0.522\n\n--------------------------------------------------------------------------------\nParameter 15: eval : alcdrinkbeh: effect from age\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate      -0.0362 (standard error        0.11)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate       0.0798 (standard error        0.17)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate      -0.0004 (standard error        0.05)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0759 (standard error        0.07)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =      0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared =   1.5047, d.f. = 4, p = 0.681\n\nEstimated mean parameter   0.0223 (s.e.   0.0266), two-sided p = 0.463\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.0532\nTest that variance of parameter is 0 :\nChi-squared =    1.1763 (d.f. = 3), p = 0.759\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.0223 (s.e.   0.0389), two-sided p = 0.607\n0.95 level confidence interval [ -0.0593 ,  0.1071 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.1275 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =    8.4925 (d.f. = 8), p = 0.387\nCombination of left one-sided p-values:\nChi-squared =    4.4877 (d.f. = 8), p = 0.811\n\n--------------------------------------------------------------------------------\nParameter 16: eval : alcdrinkbeh: effect from parentdrkfrq\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.0130 (standard error        0.04)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -0.1119 (standard error        0.35)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.1426 (standard error        0.10)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0674 (standard error        0.12)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =     -0.4, two-sided p = 0.750\n\nTest that all parameters are 0 : \nchi-squared =   2.5853, d.f. = 4, p = 0.460\n\nEstimated mean parameter   0.0367 (s.e.   0.0377), two-sided p = 0.402\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error    0.0754\nTest that variance of parameter is 0 :\nChi-squared =    1.6974 (d.f. = 3), p = 0.638\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.0345 (s.e.   0.0366), two-sided p = 0.416\n0.95 level confidence interval [ -0.0427 ,  0.1488 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,  0.1532 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   10.5681 (d.f. = 8), p = 0.227\nCombination of left one-sided p-values:\nChi-squared =     3.738 (d.f. = 8), p = 0.880\n\n--------------------------------------------------------------------------------\nParameter 17: eval : alcdrinkbeh: effect from tobacco\n--------------------------------------------------------------------------------\nData set 1, AlcoholBehavior(ans.5809) :  Estimate       0.4565 (standard error        0.17)\nData set 2, AlcoholBehavior(ans.88)   :  Estimate      -0.0197 (standard error        0.72)\nData set 3, AlcoholBehavior(ans.7)    :  Estimate       0.3567 (standard error        0.21)\nData set 4, AlcoholBehavior(ans.8)    :  Estimate       0.0612 (standard error        0.26)\n\n 4 datasets used.\n\nIWLS modification of Snijders-Baerveldt (2003) method  of combining estimates\n-----------------------------------------------------------------------------\nThis method assumes that true parameters and standard errors are uncorrelated.\nThis can be checked by the plot method and the test below.\n\nTest that estimates and standard errors are uncorrelated: \nSpearman's rank correlation rho =       -1, two-sided p = 0.083\n\nTest that all parameters are 0 : \nchi-squared =  10.5466, d.f. = 4, p = 0.014\n\nEstimated mean parameter   0.3354 (s.e.    0.099), two-sided p = 0.043\nbased on IWLS modification of Snijders & Baerveldt (2003). \n\nResidual standard error     0.198\nTest that variance of parameter is 0 :\nChi-squared =    1.9346 (d.f. = 3), p = 0.586\nbased on IWLS modification of Snijders & Baerveldt (2003).\n\nEstimates and confidence intervals under normality assumptions\n------------------------------------------------------- -------\nEstimated mean parameter   0.3354 (s.e.   0.1143), two-sided p = 0.061\n0.95 level confidence interval [  0.0379 ,  0.5654 ]\nEstimated standard deviation  < 0.0001 \n0.95 level confidence interval [       0 ,   0.424 ]\n\nFisher's combination of one-sided tests\n----------------------------------------\nCombination of right one-sided p-values:\nChi-squared =   21.0486 (d.f. = 8), p = 0.007\nCombination of left one-sided p-values:\nChi-squared =    2.5647 (d.f. = 8), p = 0.959\n```\n:::\n:::\n\n\n\n\n# Exponential Random Graphs\n\n## Lazega example\n\nFrom Statistical Analysis of Networks with R\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-14_edb53c58380d4bb927baf383987e7d1e'}\n\n```{.r .cell-code}\n# igraph example\ndata(lazega)\nplot(lazega, layout = layout_with_kk, vertex.label = V(lazega),\n     vertex.size = 10)\n```\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nThe statnet representation of \n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-15_8613fad12c052288604e1b7b4a1eef13'}\n\n```{.r .cell-code}\n# making statnet version of network data\nA <- get.adjacency(lazega)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nas(<dsCMatrix>, \"dgCMatrix\") is deprecated since Matrix 1.5-0; do as(., \"generalMatrix\") instead\n```\n:::\n\n```{.r .cell-code}\nv.attrs <- get.data.frame(lazega, what= \"vertices\")\nlazega.s <- as.network(as.matrix(A), directed = FALSE)\nnetwork::set.vertex.attribute(lazega.s, \"office\", v.attrs$Office)\nnetwork::set.vertex.attribute(lazega.s, \"practice\", v.attrs$Practice)\nnetwork::set.vertex.attribute(lazega.s, \"gender\", v.attrs$Gender)\nnetwork::set.vertex.attribute(lazega.s, \"seniority\", v.attrs$Seniority)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-16_17e453ffc1763811acae9f838b84c3ef'}\n\n```{.r .cell-code}\n# summary statistics\n## Degrees\nergm_deg <- formula(lazega.s ~ degree(1:8) + triangles) \nsummary(ergm_deg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n degree1  degree2  degree3  degree4  degree5  degree6  degree7  degree8 \n       3        2        4        2        4        4        1        1 \ntriangle \n     120 \n```\n:::\n\n```{.r .cell-code}\ndegree_distribution(lazega) * vcount(lazega)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 2 3 2 4 2 4 4 1 1 5 1 1 2 3 0 1\n```\n:::\n\n```{.r .cell-code}\ndegreedist(lazega.s) # statnet\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n degree0  degree1  degree2  degree3  degree4  degree5  degree6  degree7 \n       2        3        2        4        2        4        4        1 \n degree8  degree9 degree10 degree11 degree12 degree13 degree15 \n       1        5        1        1        2        3        1 \n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-17_96f52aabef67fa387ea86bbc06478abb'}\n\n```{.r .cell-code}\n# mixing matrix - how many ties are between each for each attribute\nmixingmatrix(lazega.s, \"gender\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   1  2\n1 98 16\n2 16  1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNote:  Marginal totals can be misleading for undirected mixing matrices.\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-18_64a8d04be3d372bfb1ad5a90c9b06843'}\n\n```{.r .cell-code}\n# Bernoulli ERGM\nergm_bern_form <- formula(lazega.s ~ edges)\nsummary(ergm_bern_form)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nedges \n  115 \n```\n:::\n\n```{.r .cell-code}\nergm_bern <- ergm(ergm_bern_form)\nsummary(ergm_bern)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\nergm(formula = ergm_bern_form)\n\nMaximum Likelihood Results:\n\n      Estimate Std. Error MCMC % z value Pr(>|z|)    \nedges  -1.4992     0.1031      0  -14.54   <1e-04 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     Null Deviance: 873.4  on 630  degrees of freedom\n Residual Deviance: 598.8  on 629  degrees of freedom\n \nAIC: 600.8  BIC: 605.2  (Smaller is better. MC Std. Err. = 0)\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-19_ef0cebd3cc37d63f20031ae58e19d3c7'}\n\n```{.r .cell-code}\nexp(-1.499) / (1 + exp(-1.499 )) # this is also the density of the network\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1825747\n```\n:::\n:::\n\n\nThe interpretation of this \"edges\" network means, that if we were to try to estimate the probability of the existence of an edge by just the number of edges in the model, we should expect a uniform distribution of the edges\n\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-20_54a0312c3a2657f4f77a7425789bd984'}\n\n```{.r .cell-code}\n# Simulating from ergm\nsim_bern <- simulate(ergm_bern, burnin = 1e+6, seed = 9)\nplot(degreedist(sim_bern))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n degree3  degree4  degree5  degree6  degree7  degree8  degree9 degree10 \n       2        8        1        5        6        9        1        2 \ndegree11 \n       2 \n```\n:::\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndegreedist(lazega.s)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n degree0  degree1  degree2  degree3  degree4  degree5  degree6  degree7 \n       2        3        2        4        2        4        4        1 \n degree8  degree9 degree10 degree11 degree12 degree13 degree15 \n       1        5        1        1        2        3        1 \n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-21_3af06b6026f31da54b40073b13aecff9'}\n\n```{.r .cell-code}\n# simulate with triangles\nergm_tri_form <- formula(lazega.s ~ triangle)\nsummary(ergm_tri_form)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntriangle \n     120 \n```\n:::\n\n```{.r .cell-code}\nergm_tri <- ergm(ergm_tri_form)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 'glpk' selected as the solver, but package 'Rglpk' is not available;\nfalling back to 'lpSolveAPI'. This should be fine unless the sample size and/or\nthe number of parameters is very big.\n```\n:::\n\n```{.r .cell-code}\nsim_tri <- simulate(ergm_tri)\nplot(sim_tri)\n```\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(ergm_tri)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\nergm(formula = ergm_tri_form)\n\nMonte Carlo Maximum Likelihood Results:\n\n         Estimate Std. Error MCMC % z value Pr(>|z|)    \ntriangle -0.38428    0.05762      0  -6.669   <1e-04 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     Null Deviance: 873.4  on 630  degrees of freedom\n Residual Deviance: 733.1  on 629  degrees of freedom\n \nAIC: 735.1  BIC: 739.5  (Smaller is better. MC Std. Err. = 1.988)\n```\n:::\n\n```{.r .cell-code}\nexp(-0.38937) / (1 + exp(-0.38937)) # p = .403\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.403869\n```\n:::\n:::\n\n\n.403 should loosely translate to the density of triangles, but I don't know how.\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-22_9f28a649be2e43dce9c7343d850020e8'}\n\n```{.r .cell-code}\n# Complex with k stars\nergm_complex <- formula(lazega.s ~ edges + kstar(2) + kstar(3) + triangle)\nsummary(ergm_complex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   edges   kstar2   kstar3 triangle \n     115      926     2681      120 \n```\n:::\n\n```{.r .cell-code}\n# alternating kstar statistic\nergm_geometric <- formula(lazega.s ~ edges + gwesp(1, fixed = TRUE))\nsummary(ergm_geometric)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        edges gwesp.fixed.1 \n     115.0000      213.1753 \n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-23_b58d4efde73391ab995d9afde79d9578'}\n\n```{.r .cell-code}\nergm_lazega <- formula(lazega.s ~ edges +\n                         gwesp(log(3), fixed = TRUE) +\n                         nodemain(\"seniority\") +\n                         nodemain(\"practice\") + \n                         match(\"practice\") + # dyads that link same practice\n                         match(\"gender\") + # dyads that link same gender\n                         match(\"office\"))\nsummary(ergm_lazega)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       edges gwesp.fixed.1.09861228866811 \n                    115.0000                     222.9108 \n           nodecov.seniority             nodecov.practice \n                   4687.0000                     359.0000 \n          nodematch.practice             nodematch.gender \n                     72.0000                      99.0000 \n            nodematch.office \n                     85.0000 \n```\n:::\n:::\n\nTypes of structural components\n\n- \"geometrically weighted degree count\"\n\n- \"Alternating sums of k-triangles\"\n\n- \"Alternating k-star statistic\"\n\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-24_298261adb178eb42ec12fd92a2105f27'}\n\n```{.r .cell-code}\n# ERGM fitting\nergm_lazega_fit <- ergm(ergm_lazega)\nanova(ergm_lazega_fit) # overall fit based on deviance statistic i guess\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table\n\nModel 1: lazega.s ~ edges + gwesp(log(3), fixed = TRUE) + nodemain(\"seniority\") + \n    nodemain(\"practice\") + match(\"practice\") + match(\"gender\") + \n    match(\"office\")\n         Df Deviance Resid. Df Resid. Dev Pr(>|Chisq|)    \nNULL                       630     873.37                 \nModel 1:  7    413.8       623     459.57    < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nsummary(ergm_lazega_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\nergm(formula = ergm_lazega)\n\nMonte Carlo Maximum Likelihood Results:\n\n                             Estimate Std. Error MCMC % z value Pr(>|z|)    \nedges                        -6.97916    0.68461      0 -10.194  < 1e-04 ***\ngwesp.fixed.1.09861228866811  0.59367    0.09150      0   6.488  < 1e-04 ***\nnodecov.seniority             0.02431    0.00635      0   3.828 0.000129 ***\nnodecov.practice              0.39029    0.11452      0   3.408 0.000655 ***\nnodematch.practice            0.76953    0.19477      0   3.951  < 1e-04 ***\nnodematch.gender              0.72433    0.25253      0   2.868 0.004127 ** \nnodematch.office              1.16433    0.19854      0   5.864  < 1e-04 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     Null Deviance: 873.4  on 630  degrees of freedom\n Residual Deviance: 459.6  on 623  degrees of freedom\n \nAIC: 473.6  BIC: 504.7  (Smaller is better. MC Std. Err. = 0.3342)\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-25_c1f05df94216e284c0eb6c3f3e3d91a0'}\n\n```{.r .cell-code}\n# goodness of fit\nergm_lazega_gof <- gof(ergm_lazega_fit)\npar(mfrow = c(2, 2))\nplot(ergm_lazega_gof)\n```\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nThe way goodness of fit is currently conducted is by generating a bunch of network statistics and seeing if they fit the simulated distribution.\n\n\n# Linear Regression w/ Matrices\n\nSection follows [Dai Shizuka's Intro to MRQAP](https://dshizuka.github.io/networkanalysis/07_mrqap.html)\n\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-26_1d49b7c05b8cce7da728bc2cfac25321'}\n\n```{.r .cell-code}\n# Generate random matrices\nset.seed(2)\nm1=rgraph(10, m=1, tprob=0.5, mode=\"graph\")\nm2=rgraph(10, m=1, tprob=0.5, mode=\"graph\") \nm3=rgraph(10, m=1, tprob=0.5, mode=\"graph\")\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-27_eb1b06a48a1f06e95ba25c45a7550658'}\n\n```{.r .cell-code}\nmod_net <- netlm(m1, m2 + m3, mode = \"graph\", nullhyp = \"qap\", test.statistic = \"t-value\")\n\nsummary(mod_net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nOLS Network Model\n\nResiduals:\n        0%        25%        50%        75%       100% \n-0.6245211 -0.5383142  0.3754789  0.4616858  0.5478927 \n\nCoefficients:\n            Estimate   Pr(<=b) Pr(>=b) Pr(>=|b|)\n(intercept)  0.6245211 1.000   0.000   0.000    \nx1          -0.0862069 0.206   0.798   0.405    \n\nResidual standard error: 0.5044 on 43 degrees of freedom\nMultiple R-squared: 0.01552 \tAdjusted R-squared: -0.007378 \nF-statistic: 0.6778 on 1 and 43 degrees of freedom, p-value: 0.4149 \n\n\nTest Diagnostics:\n\n\tNull Hypothesis: qap \n\tReplications: 1000 \n\tCoefficient Distribution Summary:\n\n       (intercept)         x1\nMin     -5.082e-01 -3.177e+00\n1stQ     1.708e+00 -8.233e-01\nMedian   2.298e+00 -2.184e-16\nMean     2.350e+00  1.370e-02\n3rdQ     2.935e+00  8.233e-01\nMax      5.194e+00  5.220e+00\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-28_4332c0c66be7ca92e48de969b99d4ad9'}\n\n```{.r .cell-code}\n# recreating netlm\ny <- m1[upper.tri(m1)]\nx <- (m2+m3)[upper.tri(m1)]\n\nsummary(lm(y~x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.6245 -0.5383  0.3755  0.4617  0.5479 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.62452    0.11256   5.548 1.65e-06 ***\nx           -0.08621    0.10471  -0.823    0.415    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5044 on 43 degrees of freedom\nMultiple R-squared:  0.01552,\tAdjusted R-squared:  -0.007378 \nF-statistic: 0.6778 on 1 and 43 DF,  p-value: 0.4149\n```\n:::\n:::\n\n\nIt seems that `netlm` is simply vectorizing the upper triangle of the matrix and running lm. In this case, they have 1 response and 1 covariate matrix. There is some additional output for the coefficient distribution.\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-29_7a5da7470e4b3991ff3a9ca41cfec8e2'}\n\n```{.r .cell-code}\nmrqap.dsp(m1~m2+m3, directed = \"undirected\", randomisations = 10000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMRQAP with Double-Semi-Partialing (DSP)\n\nFormula:  m1 ~ m2 + m3 \n\nCoefficients:\n          Estimate    P(β>=r) P(β<=r) P(|β|<=|r|)\nintercept  0.62001925 0.9983  0.0017  0.0017     \nm2         0.05813282 0.6343  0.3657  0.7110     \nm3        -0.23561116 0.0664  0.9336  0.1506     \n\nResidual standard error: 0.5002 on 42 degrees of freedom\nF-statistic: 1.202 on 2 and 42 degrees of freedom, p-value: 0.3106 \nMultiple R-squared: 0.05416 \tAdjusted R-squared: 0.00912 \nAIC: -40.77726 \n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-30_280903a1f5d2975eac969c96e7c68e24'}\n\n```{.r .cell-code}\n# same thing, but with additional regressor.\ny <- m1[upper.tri(m1)]\nx1 <- m2[upper.tri(m2)]\nx2 <- m3[upper.tri(m3)]\n\nmanual_mrqap <- lm(y~x1+x2)\n\nsummary(manual_mrqap)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x1 + x2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.6782 -0.4425  0.3219  0.3800  0.6156 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.62002    0.11169   5.551 1.75e-06 ***\nx1           0.05813    0.15142   0.384    0.703    \nx2          -0.23561    0.15425  -1.527    0.134    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5002 on 42 degrees of freedom\nMultiple R-squared:  0.05416,\tAdjusted R-squared:  0.00912 \nF-statistic: 1.202 on 2 and 42 DF,  p-value: 0.3106\n```\n:::\n:::\n\n\nFor the additional \"testing of null hypothesis\" version, see the paper references, but it involves first regressing on other covariates to \"take out the effect\", Now we use the residuals in place of the original covariate and shuffle them for the permutation test. It's unclear that there is any structure to the permutations.\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-31_d46203114b9e2311dc284ea35d4dcb34'}\n\n```{.r .cell-code}\n# first pval for x1\nx1_resid <- lm(x1~x2)$residuals\n\nset.seed(1)\nnum_random <- 10000\nbetas <- vector(mode = \"numeric\", length = num_random)\nfor (i in 1:num_random) {\n  x1_resid_shuf <- sample(x1_resid, length(x1_resid))\n  betas[i] <- lm(y~x1_resid_shuf + x2)$coef[\"x1_resid_shuf\"]\n}\n\nmean(betas <= 0.05813)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6494\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-32_4f0d4ffe1c7abe09f502231671c610a9'}\n\n```{.r .cell-code}\n# second pval for x2\nx2_resid <- lm(x2~x1)$residuals\ny2_resid <- lm(y~x1)$residuals\n\n\nlm(y ~ x1 + x2_resid) # beta coefficient is the same\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x1 + x2_resid)\n\nCoefficients:\n(Intercept)           x1     x2_resid  \n    0.53846      0.04049     -0.23561  \n```\n:::\n\n```{.r .cell-code}\n# # lm(y2_resid ~ x2_resid) # beta coefficient is the same\n# lm(y~x1+x2) # beta coef in original.\n\nset.seed(1)\nnum_random <- 10000\nbetas <- vector(mode = \"numeric\", length = num_random)\nfor (i in 1:num_random) {\n  x2_resid_shuf <- sample(x2_resid, length(x2_resid))\n  betas[i] <- lm(y~x1 + x2_resid_shuf)$coef[\"x2_resid_shuf\"]\n}\nmean(betas <= -0.23561)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0665\n```\n:::\n:::\n\n\n## Resources\n\n* [Intro to Network Regression](https://dshizuka.github.io/networkanalysis/07_mrqap.html)\n\n## QAP with correlation\n\nMatch results from \"QAP Partialling as a test of spuriousness, Krackhardt (1987)\".\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-33_9c288e20b4de5ba33726cfcaa481ab54'}\n\n```{.r .cell-code}\nm1 <- matrix(c(0, 1, 0, 0, 0,\n               1, 0, 1, 0, 0,\n               0, 1, 0, 1, 1,\n               0, 0, 1, 0, 1,\n               0, 0, 1, 1, 0), nrow = 5, byrow = T)\nm2 <- matrix(c(0, 0, 1, 1, 1,\n               0, 0, 0, 1, 1,\n               1, 0, 0, 0, 1, \n               1, 1, 0, 0, 0,\n               1, 1, 1, 0, 0), nrow = 5, byrow = T)\n\ncor(c(m1[upper.tri(m1)]), c(m2[upper.tri(m2)])) # matches paper\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.8164966\n```\n:::\n:::\n\n\n\n\n# Permuting matrices\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-34_003746e0dfcf604ea3d27fcb1badd6fc'}\n\n```{.r .cell-code}\n# pmatrix from Matrix package, creates the permutation matrix based on a vector\n(mm <- round(array(rnorm(3 * 3), c(3, 3)), 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      [,1]  [,2]  [,3]\n[1,] -0.04  1.19  0.46\n[2,]  0.05  0.94  0.48\n[3,] -0.73 -0.59 -1.37\n```\n:::\n\n```{.r .cell-code}\n(pm1 <- as(as.integer(c(2,3,1)), \"pMatrix\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3 x 3 sparse Matrix of class \"pMatrix\"\n          \n[1,] . | .\n[2,] . . |\n[3,] | . .\n```\n:::\n\n```{.r .cell-code}\nmm %*% pm1 # permute cols\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3 x 3 Matrix of class \"dgeMatrix\"\n      [,1]  [,2]  [,3]\n[1,]  0.46 -0.04  1.19\n[2,]  0.48  0.05  0.94\n[3,] -1.37 -0.73 -0.59\n```\n:::\n\n```{.r .cell-code}\npm1 %*% mm # permute rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3 x 3 Matrix of class \"dgeMatrix\"\n      [,1]  [,2]  [,3]\n[1,]  0.05  0.94  0.48\n[2,] -0.73 -0.59 -1.37\n[3,] -0.04  1.19  0.46\n```\n:::\n\n```{.r .cell-code}\nmm[c(2,3,1), c(2, 3, 1)] # permute both row & col\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      [,1]  [,2]  [,3]\n[1,]  0.94  0.48  0.05\n[2,] -0.59 -1.37 -0.73\n[3,]  1.19  0.46 -0.04\n```\n:::\n:::\n\n\n\n# Network Block Models\n\nAnalagous to classic mixture models, and used to fit stochastic block models\n\n$$\n\\begin{aligned}\n\\mathbb{P}_\\theta (Y = y) = \\frac{1}{\\kappa}\\exp \\left\\{\\sum_{q,r} \\theta_{qr}L_{qr}(y)\\right\\}\n\\end{aligned}\n$$\nwhere $L_{qr}(y)$ is the number of edges in the observed graph $y$ connecting pairs of vertices of classes between $q$ and $r$.\n\nAlgorithmically, the EM algorithm is a natural choice here.\n\nUnfortunately, couldn't get mixer to work because it errored out in installation.\n\n\n\n\n\n# Latent Network Models\n\nLoosely speaking, latent network models extract the eigenspace of relational data, essentially the eigen decomposition of the symmetric adjacency matrix. We follow Kolacyzk's statistical analysis of network data in this section.\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-36_c3ac87353ddfb51c395f06e679f071a0'}\n\n```{.r .cell-code}\nset.seed(42) # for mcmc sampling\nlaz_A <- get.adjacency(lazega, sparse = FALSE)\n```\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-37_2fde0933a7dda4f2279bf8f6159dbad5'}\n\n```{.r .cell-code}\n# base fit\nlazega_leig_fit1 <- eigenmodel_mcmc(laz_A, R = 2, S = 11000, burn = 10000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n5 percent done (iteration 1050) Mon Dec 19 20:52:33 2022\n10 percent done (iteration 2100) Mon Dec 19 20:52:36 2022\n15 percent done (iteration 3150) Mon Dec 19 20:52:39 2022\n20 percent done (iteration 4200) Mon Dec 19 20:52:43 2022\n25 percent done (iteration 5250) Mon Dec 19 20:52:46 2022\n30 percent done (iteration 6300) Mon Dec 19 20:52:49 2022\n35 percent done (iteration 7350) Mon Dec 19 20:52:52 2022\n40 percent done (iteration 8400) Mon Dec 19 20:52:56 2022\n45 percent done (iteration 9450) Mon Dec 19 20:52:59 2022\n50 percent done (iteration 10500) Mon Dec 19 20:53:03 2022\n55 percent done (iteration 11550) Mon Dec 19 20:53:06 2022\n60 percent done (iteration 12600) Mon Dec 19 20:53:09 2022\n65 percent done (iteration 13650) Mon Dec 19 20:53:12 2022\n70 percent done (iteration 14700) Mon Dec 19 20:53:16 2022\n75 percent done (iteration 15750) Mon Dec 19 20:53:19 2022\n80 percent done (iteration 16800) Mon Dec 19 20:53:23 2022\n85 percent done (iteration 17850) Mon Dec 19 20:53:26 2022\n90 percent done (iteration 18900) Mon Dec 19 20:53:29 2022\n95 percent done (iteration 19950) Mon Dec 19 20:53:32 2022\n100 percent done (iteration 21000) Mon Dec 19 20:53:36 2022\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-38_104df41f4045f60549c537ba53807389'}\n\n```{.r .cell-code}\n# same practice regressor\nv_attr_df <- get.data.frame(lazega, what = \"vertices\")\nsame_prac_op <- v_attr_df$Practice %o% v_attr_df$Practice # outer product of all ties\n# possible values are 1:3, so squared values are equality,\nsame_prac <- matrix(as.numeric(same_prac_op %in% c(1, 4, 9)), 36, 36)\n# regressors into array\nleig_X <- array(same_prac, dim = c(36, 36, 1))\n\n# model w/ practice as regressor\nlazega_leig_fit2 <- eigenmodel_mcmc(laz_A, leig_X, R = 2, S = 11000, burn = 1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n5 percent done (iteration 600) Mon Dec 19 20:53:38 2022\n10 percent done (iteration 1200) Mon Dec 19 20:53:40 2022\n15 percent done (iteration 1800) Mon Dec 19 20:53:42 2022\n20 percent done (iteration 2400) Mon Dec 19 20:53:44 2022\n25 percent done (iteration 3000) Mon Dec 19 20:53:46 2022\n30 percent done (iteration 3600) Mon Dec 19 20:53:48 2022\n35 percent done (iteration 4200) Mon Dec 19 20:53:50 2022\n40 percent done (iteration 4800) Mon Dec 19 20:53:52 2022\n45 percent done (iteration 5400) Mon Dec 19 20:53:54 2022\n50 percent done (iteration 6000) Mon Dec 19 20:53:56 2022\n55 percent done (iteration 6600) Mon Dec 19 20:53:58 2022\n60 percent done (iteration 7200) Mon Dec 19 20:54:00 2022\n65 percent done (iteration 7800) Mon Dec 19 20:54:02 2022\n70 percent done (iteration 8400) Mon Dec 19 20:54:04 2022\n75 percent done (iteration 9000) Mon Dec 19 20:54:06 2022\n80 percent done (iteration 9600) Mon Dec 19 20:54:08 2022\n85 percent done (iteration 10200) Mon Dec 19 20:54:10 2022\n90 percent done (iteration 10800) Mon Dec 19 20:54:12 2022\n95 percent done (iteration 11400) Mon Dec 19 20:54:14 2022\n100 percent done (iteration 12000) Mon Dec 19 20:54:16 2022\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-39_56a11740e8247976de7402dfe4553a23'}\n\n```{.r .cell-code}\n# same office - create regression matrix\nsame_off_op <- v_attr_df$Office %o% v_attr_df$Office\nsame_off <- matrix(as.numeric(same_off_op %in% c(1, 4, 9)), 36, 36)\nsame_off <- array(same_off, dim = c(36, 36, 1))\nleig_X <- array(same_off, dim = c(36, 36, 1))\n\nlazega_leig_fit3 <- eigenmodel_mcmc(laz_A, leig_X, R = 2, S = 3000, burn = 5000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n5 percent done (iteration 400) Mon Dec 19 20:54:18 2022\n10 percent done (iteration 800) Mon Dec 19 20:54:19 2022\n15 percent done (iteration 1200) Mon Dec 19 20:54:20 2022\n20 percent done (iteration 1600) Mon Dec 19 20:54:22 2022\n25 percent done (iteration 2000) Mon Dec 19 20:54:23 2022\n30 percent done (iteration 2400) Mon Dec 19 20:54:24 2022\n35 percent done (iteration 2800) Mon Dec 19 20:54:26 2022\n40 percent done (iteration 3200) Mon Dec 19 20:54:27 2022\n45 percent done (iteration 3600) Mon Dec 19 20:54:29 2022\n50 percent done (iteration 4000) Mon Dec 19 20:54:30 2022\n55 percent done (iteration 4400) Mon Dec 19 20:54:31 2022\n60 percent done (iteration 4800) Mon Dec 19 20:54:33 2022\n65 percent done (iteration 5200) Mon Dec 19 20:54:34 2022\n70 percent done (iteration 5600) Mon Dec 19 20:54:36 2022\n75 percent done (iteration 6000) Mon Dec 19 20:54:37 2022\n80 percent done (iteration 6400) Mon Dec 19 20:54:39 2022\n85 percent done (iteration 6800) Mon Dec 19 20:54:40 2022\n90 percent done (iteration 7200) Mon Dec 19 20:54:41 2022\n95 percent done (iteration 7600) Mon Dec 19 20:54:43 2022\n100 percent done (iteration 8000) Mon Dec 19 20:54:44 2022\n```\n:::\n:::\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-40_89b005afee18741b4a73d5e55cda37cb'}\n\n:::\n\n\nBelow are the 3 latent variable spaces based on \n\n1. base regression\n2. same practice\n3. same office\n\n\n::: {.cell hash='social_network_cache/html/unnamed-chunk-41_449bab0f40028c82c0adaeaffab45054'}\n\n```{.r .cell-code}\npar(mfrow = c(1, 3), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0))\nplot(lazega, layout = leig_lat_1,\n     vertex.color = v_colors,\n     vertex.shape = v_shapes,\n     vertex.size = v_size,\n     vertex.label = v_label)\nplot(lazega, layout = leig_lat_2,\n     vertex.color = v_colors,\n     vertex.shape = v_shapes,\n     vertex.size = v_size,\n     vertex.label = v_label)\nplot(lazega, layout = leig_lat_3,\n     vertex.color = v_colors,\n     vertex.shape = v_shapes,\n     vertex.size = v_size,\n     vertex.label = v_label)\n```\n\n::: {.cell-output-display}\n![](social_network_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}