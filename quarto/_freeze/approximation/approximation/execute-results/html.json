{
  "hash": "51af15b7d2607e6d6e1a8940a5f80f50",
  "result": {
    "markdown": "---\ntitle: \"Approximation\"\nauthor: \"Michael Liou\"\ndate: \"12/22/2021\"\n---\n\n\n\n\n## Edgeworth Expansion\n\nEdgeworth expansion is an improvement to the normal approximation that includes skewness (degree 2) and kurtosis (degree three). The first degree approximation amounts to the normal approximation.\n\nSuppose we have a general distribution $X_i$ with mean $\\mu$ and variance $\\sigma^2$. If we standardize the sum, we have a statistic that is approximately N$(0, 1)$\n\n$$\n\\begin{aligned}\nZ = \\frac{1}{\\sqrt{n}} \\sum_i \\frac{X_i - \\mu}{\\sigma}\n\\end{aligned}\n$$\nEdgeworth expansion of the pdf of $Z$ is\n\n$$\n\\begin{aligned}\nf_Z(z) = \\underbrace{\\underbrace{\\underbrace{\\phi(z)}_{\\text{degree 1}} + \\frac{\\lambda_3}{6\\sqrt{n}}H_3(z)\\phi(z)}_{\\text{degree 2}} + \\left(\\frac{\\lambda_4}{24n}H_4(z)\\phi(z) + \\frac{\\lambda_3^2}{72n}H_6(z)\\phi(z)\\right)}_{\\text{degree 3}} + o\\left(\\frac{1}{n}\\right)\n\\end{aligned}\n$$\nwhere: \n\n* $\\lambda_r$ denotes the cumulant of Z, related to the cumulants of $X_i$ by $\\lambda_r = \\kappa_r / \\sigma^r$ if cumulants of $X_i$ are represented by $\\kappa_r$\n* $H_r$ are hermite polynomials.\n\nWe look at how well this approximation works for the sum of chisq random variables. The cumulants of the chisq variables.\n\nSuppose $X_i \\sim \\chi^2_2$\n\nIf we study the mean, the true distribution is $\\bar{X_i} \\sim \\Gamma(\\frac{n *   df}{2}, \\frac{n}{2})$.\n\n\n::: {.cell hash='approximation_cache/html/unnamed-chunk-1_5e9b930069ee3478c0fb7edc5faf0864'}\n\n```{.r .cell-code}\nset.seed(1)\nn <- 3\n\n# Sampled distribution\nrand_x <- rchisq(1000, 2) + rchisq(1000, 2) + rchisq(1000, 2)\nrand_x_mean <- rand_x / n\n\n# True distribution\n# Gamma(3, 3/2)\nx <- seq(0, 10, by=.1)\ntrue_y <- dgamma(x, 3, 3/2)\n\n# Normal Approximation\n# N(2, 4/3)\nnorm_approx_y <- dnorm(x, mean = 2, sd = sqrt(4/3))\n```\n:::\n\n\n\nFor the edgeworth expansion, since we're studying the mean $\\bar X$, this is a transformation of $Z$, that is,\n\n$$\n\\begin{aligned}\n\\bar X = \\frac{(Z\\sqrt{n\\sigma^2} + n\\mu)}{n}\n\\end{aligned}\n$$\nso the inverse formula that we use in the pdf transformation formula, \n\n$$\n\\begin{aligned}\nZ = \\frac{n\\bar X - n\\mu}{\\sqrt{n\\sigma^2}}\n\\end{aligned}\n$$\nThe transformation formula would then say,\n\n$$\n\\begin{aligned}\nf_{\\bar X}(x) &= \\underbrace{f_Z\\left(\\frac{nx - n\\mu}{\\sqrt{n\\sigma^2}}\\right)}_{\\text{approximated by Edgeworth}} \\left| \\frac{\\sqrt{n}}{\\sigma}\\right|\n\\end{aligned}\n$$\n\n\n\n::: {.cell hash='approximation_cache/html/unnamed-chunk-2_a19150bc3a2989a91df9f5bbb327c188'}\n\n```{.r .cell-code}\nherm <- Vectorize(function(x, degree = 1 ) {\n  switch(degree,\n         x,\n         x^2 -1,\n         x^3 - 3*x,\n         x^4 - 6*x^2 + 3,\n         x^5 - 10 * x^3 + 15 * x,\n         x^6 - 15*x^4 + 45*x^2 - 15)\n}, \"x\")\n\n\n# Edgeworth expansion, degree 2\nedgeworth_mean2 <- function(x, n, mu, sigma2, lambda3){\n  z <- sqrt(n) * (x - mu) / sqrt(sigma2)\n  sqrt(n / sigma2) * dnorm(z) * (1 + lambda3 / (6 * sqrt(n)) * herm(z, 3))\n}\n\n# Edgeworth expansion, degree 3\nedgeworth_mean3 <- function(x, n, mu, sigma2, lambda3, lambda4) {\n  z <- sqrt(n) * (x - mu) / sqrt(sigma2) # transformation\n  sqrt(n / sigma2) * # transformation scaling\n    dnorm(z) * (1 +  # degree 1 terms\n      lambda3 / (6 * sqrt(n)) * herm(z, 3) + # degree 2 terms\n      lambda4 / (24 * n) * herm(z, 4) + # degree 3 terms\n      lambda3^2 / (72 * n) * herm(z, 6)) # degree 3 terms\n}\n```\n:::\n\n::: {.cell hash='approximation_cache/html/unnamed-chunk-3_efdcf52df3d56bb944f3998372a9aa6c'}\n\n```{.r .cell-code}\n# Creating unified plot with all the \nhist(rand_x_mean, breaks=50, freq = FALSE, main = \"Mean of chisq (Edgeworth)\", xlab = \"x\")\nlines(x, true_y, lwd = 2)\nlines(x, norm_approx_y, lty = 2, col = 2, lwd = 2)\nlines(x, edgeworth_mean2(x, 3, 2, 4, 2), lty = 2, col = 3, lwd = 2)\nlines(x, edgeworth_mean3(x, 3, 2, 4, 2, 6), lty = 2, col = 4, lwd = 2)\nlegend(\"topright\", \n       legend = c(\"True Distribution\", \n                  \"Normal Approximation\", \n                  \"Edgeworth (2 deg)\", \n                  \"Edgeworth (3 deg)\"),\n       col = c(1, 2, 3, 4), \n       lty = c(1, 2, 2, 2))\n```\n\n::: {.cell-output-display}\n![](approximation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### R Packages\n\n- EW\n  - does finite differencing for the moment estimators\n  - only two functions, edgeworth and saddlepoint approximations\n- EQL (extended quasi likelihood)\n  - does extended quasi-likelihood and saddlepoint approximations too\n  - in my opinion, very well written and clear readable code. Used source code to figure out my own errors.\n  \n\n::: {.cell hash='approximation_cache/html/unnamed-chunk-4_2d6cc074b92c92c644d97ec10ecb1284'}\n\n```{.r .cell-code}\nlibrary(EQL)\n# Usage for our example\new <- edgeworth(x, n = 3, mu = 2, sigma2 = 4, rho3 = 2, rho4 = 6, type = \"mean\", deg = 3)\n\n# They match with our results\nhist(rand_x_mean, breaks=50, freq = FALSE, main = \"Mean of chisq (Edgeworth)\", xlab = \"x\")\nlines(x, true_y)\nlines(x, edgeworth_mean3(x, 3, 2, 4, 2, 6), col = 2)\nlines(x, ew$approx, lty = 2, lwd = 2, col = 3)\n```\n\n::: {.cell-output-display}\n![](approximation_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Further Resources\n\n- http://personal.psu.edu/drh20/asymp/fall2004/lectures/edgeworth.pdf\n- [Writing Projects](https://math.montana.edu/grad_students/writing-projects/2004/04sondrggr.pdf)\n\n## Saddlepoint Approximation\n\n- https://stats.stackexchange.com/questions/191492/how-does-saddlepoint-approximation-work/191781\n- [Preliminary Asymptotics](https://warwick.ac.uk/fac/sci/statistics/apts/students/resources-1314/stat_asymp_prelim.pdf)\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}